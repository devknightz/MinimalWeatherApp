/*
 * Copyright 2017 vinayagasundar
 * Copyright 2017 randhirgupta
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def globalConf = rootProject.ext


/* Load the API keys from Properties file */
Properties properties = new Properties()
properties.load(project.rootProject.file('keys.properties').newDataInputStream())

def releaseWeatherAPI = properties['releaseWeatherAPI']
def debugWeatherAPI = properties['debugWeatherAPI']



android {
    compileSdkVersion globalConf.appCompileSdkVersion
//    buildToolsVersion globalConf.buildToolsVersion

    defaultConfig {
        def versionMajor = 0
        def versionMinor = 1
        def versionPatch = 0

        def versionFullName = "${versionMajor}.${versionMinor}.${versionPatch}"
        def versionCodeFinal = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100

        applicationId "you.devknights.minimalweather"

        minSdkVersion globalConf.appMinSdkVersion
        targetSdkVersion globalConf.appTargetSdkVersion

        versionCode versionCodeFinal
        versionName "${versionFullName}"

        multiDexEnabled true

        /*Enabled Vector Support*/
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("${properties['keystore']}")
            storePassword "${properties['keystore_password']}"
            keyAlias "${properties['key_alias']}"
            keyPassword "${properties['key_password']}"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("String", "OPEN_WEATHER_API_KEY", "\"$releaseWeatherAPI\"")
        }

        debug {
            minifyEnabled false

            buildConfigField("String", "OPEN_WEATHER_API_KEY", "\"$debugWeatherAPI\"")
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])

    Map<String, String> deps = globalConf.dependenices

    implementation deps.kotlinStdLib

    implementation deps.appCompatLib
    implementation deps.gridLayoutLib
    implementation deps.constraintLib
    implementation deps.designLib
    implementation deps.archExtension
    implementation deps.roomRuntime

    implementation deps.playLocation

    implementation deps.retrofit2
    implementation deps.retrofit2Logger
    implementation deps.gsonConverter

    implementation deps.daggerRuntime
    implementation deps.daggerAndroid
    implementation deps.daggerAndroidSupport

//    implementation deps.workmanager

    kapt deps.daggerCompiler
    kapt deps.daggerAndroidCompiler

    kapt deps.archCompiler
    kapt deps.roomCompiler

    testImplementation deps.junitLibs
    testImplementation deps.mockWebServer
    testImplementation( deps.archCoreTesting, {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    testImplementation deps.mockitoCore
    testImplementation deps.hamcrest

    androidTestImplementation(deps.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

//    debugImplementation deps.debugDB


}
